name: Deploy Lambdas

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  deploy-lambdas:
    runs-on: self-hosted
    env:
      ACCOUNT_ID: '384386061638'
      AWS_REGION: 'us-east-1'
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Build
        run: |
          export ROOTDIR=$(pwd)
          cd $ROOTDIR/lambdas/import-data-items
          npm install
          npm run build
          zip -r -y ../../import-data-items.zip ./*
          cd $ROOTDIR/lambdas/collect-data-items
          npm install
          npm run build
          zip -r -y ../../collect-data-items.zip ./*
      - name: Upload S3
        run: |

          # BOILERPLATE START #
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # BOILERPLATE END #


          aws s3 cp import-data-items.zip s3://arweave-lambda-deployments/import-data-items.zip
          aws s3 cp collect-data-items.zip s3://arweave-lambda-deployments/collect-data-items.zip

          LAMBDAS=$(aws lambda list-functions | jq -r '.Functions | map(.FunctionName) | .[]')

          for l in $LAMBDAS; do
            echo lambda $l
            if [[ $l =~ ^import\-data.* ]];
            then
              aws lambda update-function-code \
                --publish \
                --function-name $l \
                --s3-bucket arweave-lambda-deployments \
                --s3-key import-data-items.zip
            fi

            if [[ $l =~ ^collect\-data.* ]];
            then
              aws lambda update-function-code \
                --publish \
                --function-name $l \
                --s3-bucket arweave-lambda-deployments \
                --s3-key collect-data-items.zip
            fi
          done
